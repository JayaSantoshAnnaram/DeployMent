{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/alert.component.html","./src/app/app.component.html","./src/app/header/header.component.html","./src/app/posts/auth/sign-in/sign-in.template.html","./src/app/posts/auth/sign-up/sign-up.component.html","./src/app/posts/create-posts/posts-create.component.html","./src/app/posts/list-posts/post-list.component.html","./src/app/alert.component.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.routing-module.ts","./src/app/header/header.component.css","./src/app/header/header.component.ts","./src/app/posts/auth/auth-interceptor.service.ts","./src/app/posts/auth/auth-routing-gaurd-servive.ts","./src/app/posts/auth/auth.service.ts","./src/app/posts/auth/sign-in/sign-in-component.ts","./src/app/posts/auth/sign-in/sign-in.component.css","./src/app/posts/auth/sign-up/sign-up.component.css","./src/app/posts/auth/sign-up/sign-up.component.ts","./src/app/posts/create-posts/post-create.component.css","./src/app/posts/create-posts/posts-create.component.ts","./src/app/posts/list-posts/post-list.component.css","./src/app/posts/list-posts/post-list.component.ts","./src/app/posts/post-service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<h1 mat-dialog-title>Error Occured</h1>\\r\\n<mat-dialog-content>{{data.data|json}}</mat-dialog-content>\\r\\n<mat-dialog-actions>\\r\\n  <button mat-button mat-dialog-close>Ok</button>\\r\\n</mat-dialog-actions>\"","module.exports = \"<app-header></app-header>\\n<main>\\n    <router-outlet></router-outlet>\\n</main>\\n\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n    <span><a routerLink=\\\"/\\\">My Messages</a></span>\\n    <span>      &nbsp;&nbsp;&nbsp;</span>\\n    <span><a mat-button routerLink=\\\"/create\\\" routerLinkActive=\\\"mat-danger\\\"  >Create Post</a></span>\\n    <a mat-button routerLink=\\\"/sign-in\\\" routerLinkActive=\\\"mat-danger\\\" *ngIf=\\\"!isUserAutenticated\\\" >Sign In</a>\\n    <a mat-button routerLink=\\\"/sign-up\\\" routerLinkActive=\\\"mat-danger\\\" *ngIf=\\\"!isUserAutenticated\\\" >Sign Up</a>\\n    <span><button mat-button (click)=\\\"signOut()\\\" *ngIf=\\\"isUserAutenticated\\\"  >Log Out</button></span>\\n    \\n    \\n</mat-toolbar>\\n\\n\"","module.exports = \"<mat-card>\\r\\n<form (submit)=\\\"login(formReference)\\\"  #formReference=ngForm >\\r\\n       \\r\\n                <mat-form-field>\\r\\n                    <input type=\\\"email\\\"\\r\\n                    matInput\\r\\n                    email\\r\\n                     required\\r\\n                     name=\\\"email\\\"\\r\\n                     ngModel\\r\\n                     #emailReference=\\\"ngModel\\\"\\r\\n                     placeholder=\\\"Enter Email Id\\\"/>\\r\\n                    <mat-error *ngIf=\\\"emailReference.invalid\\\" >Please Enter Email Id</mat-error>\\r\\n                </mat-form-field>\\r\\n                <div></div>\\r\\n                <mat-form-field>\\r\\n                    <input type=\\\"password\\\" \\r\\n                    matInput\\r\\n                     required\\r\\n                     name=\\\"password\\\"\\r\\n                     ngModel\\r\\n                     #passwordReference=\\\"ngModel\\\"   \\r\\n                      placeholder=\\\"Enter valid Password\\\"/>\\r\\n                    <mat-error *ngIf=\\\"passwordReference.invalid\\\">Please Enter a Valid password</mat-error>\\r\\n                </mat-form-field>\\r\\n                <div></div>\\r\\n                <button type=\\\"submit\\\" mat-raised-button color=\\\"accent\\\" >Login In</button>\\r\\n            \\r\\n </form>   \\r\\n</mat-card>\\r\\n<mat-spinner *ngIf=\\\"spinner\\\" [color]=\\\"'warn'\\\"></mat-spinner>\\r\\n\\r\\n\"","module.exports = \"<mat-card>\\n    <form (submit)=\\\"login(formReference)\\\"  #formReference=ngForm >\\n           \\n                    <mat-form-field>\\n                        <input type=\\\"email\\\"\\n                        matInput\\n                        email\\n                         required\\n                         name=\\\"email\\\"\\n                         ngModel\\n                         #emailReference=\\\"ngModel\\\"\\n                         placeholder=\\\"Enter Email Id\\\"/>\\n                        <mat-error *ngIf=\\\"emailReference.invalid\\\" >Please Enter Email Id</mat-error>\\n                    </mat-form-field>\\n                    <div></div>\\n                    <mat-form-field>\\n                        <input type=\\\"password\\\" \\n                        matInput\\n                         required\\n                         name=\\\"password\\\"\\n                         ngModel\\n                         #passwordReference=\\\"ngModel\\\"   \\n                          placeholder=\\\"Enter valid Password\\\"/>\\n                        <mat-error *ngIf=\\\"passwordReference.invalid\\\">Please Enter a Valid password</mat-error>\\n                    </mat-form-field>\\n                    <div></div>\\n                    <button type=\\\"submit\\\" mat-raised-button color=\\\"accent\\\" >Sign Up for Freeee</button>\\n                \\n     </form>   \\n    </mat-card>\\n    \\n    \\n    \"","module.exports = \"<mat-spinner [color]=\\\"'warn'\\\" *ngIf=\\\"spinner\\\"></mat-spinner>\\n<form (submit)=\\\"onSavePosts(formReference)\\\" #formReference=ngForm *ngIf=\\\"!spinner\\\">\\n        <mat-card>\\n                <mat-form-field>\\n                    <input matInput\\n                     required\\n                     [ngModel]=\\\"post?.title\\\"\\n                     name=\\\"title\\\" \\n                     #titleReference=\\\"ngModel\\\" \\n                     placeholder=\\\"Enter Title of Post\\\"/>\\n                    <mat-error *ngIf=\\\"titleReference.invalid\\\">Please Enter Title of Post</mat-error>\\n                </mat-form-field>\\n                <!-- <div>\\n                    <button type=\\\"button\\\" mat-stroked-button (click)=fileReference.click()>Pick Image</button>\\n                    <input type=\\\"file\\\" id=\\\"imageUpload\\\" #fileReference/>\\n                </div> -->\\n                <mat-form-field>\\n                    <textarea \\n                     required \\n                     [ngModel]=\\\"post?.content\\\"\\n                     name=\\\"content\\\" \\n                     #contentReference=\\\"ngModel\\\"\\n                      matInput rows=\\\"6\\\"  \\n                      placeholder=\\\"Enter Content of Post\\\"></textarea>\\n                    <mat-error *ngIf=\\\"contentReference.invalid\\\">Please Enter Content of Post</mat-error>\\n                </mat-form-field>\\n                <button type=\\\"submit\\\" mat-raised-button color=\\\"accent\\\" >Save Post</button>\\n            </mat-card>\\n </form>   \\n\"","module.exports = \"\\n\\n<mat-accordion multi=true *ngIf=\\\"postsReceived.length!=0; else block\\\">\\n    <mat-expansion-panel *ngFor=\\\"let post of postsReceived\\\">\\n        <mat-expansion-panel-header>\\n            {{post.title}}\\n        </mat-expansion-panel-header>\\n            {{post.content}}\\n            <mat-action-row *ngIf=\\\"userAuth && post.creator==authorisedUser\\\">\\n                <a mat-button color=\\\"primary\\\"  [routerLink]=\\\"['/edit',post.id]\\\" >EDIT</a>\\n                <button mat-button color=\\\"warn\\\" (click)=\\\"onDelete(post.id)\\\" >DELETE</button>\\n            </mat-action-row>\\n    </mat-expansion-panel>\\n</mat-accordion>\\n<mat-spinner *ngIf=\\\"!postsReceived\\\" [color]=\\\"'warn'\\\"></mat-spinner>\\n<ng-template #block ><p class=\\\"mat-display-2 elseBock\\\">No Posts are Present</p></ng-template>\\n\\n\"","import { Component, Input, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n\r\n@Component({\r\n    selector:'alert-selector',\r\n    templateUrl:'./alert.component.html'\r\n})\r\nexport class AlertComponent implements OnInit{\r\n\r\n        constructor(@Inject(MAT_DIALOG_DATA) public data: any ){\r\n            \r\n        }\r\n        \r\n        ngOnInit(){\r\n                \r\n        }\r\n        ngOnDestroy(){\r\n            \r\n        }\r\n    errorRecived:string;\r\n}\r\n","module.exports = \"main{\\n    margin: auto;\\n    width: 80%;\\n\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osVUFBVTs7QUFFZCIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWFpbntcbiAgICBtYXJnaW46IGF1dG87XG4gICAgd2lkdGg6IDgwJTtcblxufSJdfQ== */\"","import { Component } from '@angular/core';\nimport { Post } from './posts/post.model';\nimport { AuthService } from './posts/auth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent  {\n  constructor(private authService:AuthService){\n\n  }\n\n  ngOnInit(){\n    this.authService.autoAuthUser();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { PostCreateComponent } from './posts/create-posts/posts-create.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatInputModule, MatCardModule, MatButtonModule, MatToolbarModule, MatExpansionModule, MatProgressSpinnerModule, MatDialogModule } from '@angular/material';\nimport { HeaderComponent } from './header/header.component';\nimport { PostListComponent } from './posts/list-posts/post-list.component';\nimport { PostService } from './posts/post-service';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppRoutingModule } from './app.routing-module';\nimport { SignInComponent } from './posts/auth/sign-in/sign-in-component';\nimport { SignUpComponent } from './posts/auth/sign-up/sign-up.component';\nimport { AuthenticationInterceptor } from './posts/auth/auth-interceptor.service';\nimport { AlertComponent } from './alert.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostCreateComponent,\n    HeaderComponent,\n    PostListComponent,\n    SignInComponent,\n    SignUpComponent,\n    AlertComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatCardModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    MatProgressSpinnerModule,\n    HttpClientModule,\n    MatDialogModule\n    \n  ],\n  providers: [PostService,{provide:HTTP_INTERCEPTORS,useClass:AuthenticationInterceptor,multi:true}],\n  bootstrap: [AppComponent],\n  entryComponents:[AlertComponent]\n  \n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport {RouterModule, Routes } from '@angular/router';\nimport { PostListComponent } from './posts/list-posts/post-list.component';\nimport { PostCreateComponent } from './posts/create-posts/posts-create.component';\nimport { SignInComponent } from './posts/auth/sign-in/sign-in-component';\nimport { SignUpComponent } from './posts/auth/sign-up/sign-up.component';\nimport { AuthRoutingGuardService } from './posts/auth/auth-routing-gaurd-servive';\n\nconst routes:Routes=[\n    {path:'',component:PostListComponent},\n    {path:'create',canActivate:[AuthRoutingGuardService],component:PostCreateComponent},\n    {path:'edit/:id',canActivate:[AuthRoutingGuardService],component:PostCreateComponent},\n    {path:'sign-in',component:SignInComponent},\n    {path:'sign-up',component:SignUpComponent}\n]\n\n@NgModule({\n    imports:[RouterModule.forRoot(routes)],\n    exports:[RouterModule],\n    providers:[AuthRoutingGuardService]\n})\nexport class AppRoutingModule{\n\n}","module.exports = \"a{\\n    color: white;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImF7XG4gICAgY29sb3I6IHdoaXRlO1xufVxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../posts/auth/auth.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n    selector:'app-header',\n    templateUrl:'./header.component.html',\n    styleUrls:['./header.component.css']\n})\nexport class HeaderComponent implements OnInit{\n    isUserAutenticated:boolean=false;\n    constructor(private authService:AuthService){\n\n    }\n    subscription:Subscription;\n    ngOnInit(){\n        this.isUserAutenticated=this.authService.getUserStatus();\n      this.subscription=  this.authService.getTokenStatus().subscribe((data)=>{\n            this.isUserAutenticated=data;\n        })\n    }\n\n    // Implementing SignOut Functionality\n    signOut(){\n        this.authService.signOut();\n    }\n\n    ngOnDestroy(){\n            this.subscription.unsubscribe();\n    }\n\n}","import { Injectable } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class AuthenticationInterceptor implements HttpInterceptor{\r\n    \r\n    constructor(private authSerive:AuthService){\r\n\r\n    }\r\n    intercept(req: HttpRequest<any>, next:HttpHandler){\r\n        const token=this.authSerive.getToken();\r\n        const newRequest=req.clone({setHeaders:{'authorization':'jalasa '+token}});\r\n\r\n        return next.handle(newRequest);\r\n\r\n\r\n\r\n        \r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class AuthRoutingGuardService implements CanActivate {\r\n    \r\n    constructor(private authService:AuthService,private router:Router){\r\n\r\n    }\r\n\r\n    //Can Active method\r\n    canActivate(route:ActivatedRouteSnapshot, state:RouterStateSnapshot): boolean{\r\n        let userStatus=this.authService.getUserStatus()\r\n        if(!userStatus){\r\n                this.router.navigate(['/sign-in'])\r\n        }\r\n        return true;\r\n    }\r\n\r\n}","import { Injectable, EventEmitter } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { UserModule } from '../user.model';\nimport { retry, catchError } from 'rxjs/operators';\nimport { EmailValidator } from '@angular/forms';\nimport { Subject, throwError, of } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material';\nimport { AlertComponent } from 'src/app/alert.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n    user:UserModule\n  constructor(private _http:HttpClient,private dialog:MatDialog,private router:Router) {\n\n   }\n\n   createUser(email:string,password:string){\n     this._http.post('http://localhost:4200/api/user/sign-up',{\n        'email':email,\n        'password':password\n      })\n      .subscribe(()=>{\n      alert('Account Created Successfully please Sigin into the portal for further Creating the Posts');\n      this.router.navigate(['/sign-in'])},\n      (err)=>this.handleError(err));     \n   }\n   \n   handleError(err:HttpErrorResponse){\n    // console.log(err);\n    this.dialog.open(AlertComponent,{data:{data:err.error.Message}});\n   }\n\n   token:string;\n   Autotimer:any;\n   AuthoriseduserId:string;\n   // Login User \n   login(email:string,password:string){\n     this._http.post<{token:string,timer:number,userId:string}>(`http://localhost:4200/api/user/sign-in`,{\n       'email':email,\n       'password':password\n     }).pipe(catchError((err)=>{\n            \n        return throwError(this.handleError(err));\n            \n     })).subscribe(data=>{\n          // Storing Authorised user ID\n          this.AuthoriseduserId=data.userId;\n \n          const tokenRecived=data.token;\n          this.token=tokenRecived;\n          // Checking whether token is present or not for verifying user authentication\n          if(this.token){\n            // Function of Auto locked outfunctionality\n            const timer=data.timer;\n            this.timer(timer);\n            this.isUserAunticated=true;\n            this.tokentStatus.next(true);\n            \n            // Code for storing autheication data to local storage\n            const dateNow=new Date();\n            const expirationDate=new Date(dateNow.getTime()+data.timer*1000);\n          this.saveAuthData(this.token,expirationDate,this.AuthoriseduserId);\n          this.router.navigate(['/'])\n          }\n\n     },(err)=>{\n      //  alert(err.error.message);\n       this.tokentStatus.next(false);\n       console.log(err)\n      });\n     \n   }\n\n   // Code refracted for timing \n   timer(timer){\n    this.Autotimer= setTimeout(()=>{\n      this.signOut();\n    },timer*1000)\n   }\n\n   //Get Token Method\n   getToken(){\n     return this.token;\n   }\n\n   // Tokent status\n   private tokentStatus=new Subject<boolean>();\n   getTokenStatus(){\n      return this.tokentStatus.asObservable();\n   }\n\n   isUserAunticated:boolean=false;\n   // user Authentication Status\n   getUserStatus(){\n    return this.isUserAunticated;\n   }\n\n   //SignOut Functionality which will set token to null and set user authenticted properties to false\n   signOut(){\n     this.token=null;\n     this.isUserAunticated=false;\n     this.tokentStatus.next(false);\n     clearTimeout(this.Autotimer);\n     this.clearAuthData();\n     this.AuthoriseduserId=null;\n     this.router.navigate(['/'])\n   }\n\n   // Saving authentication data\n   private saveAuthData(token:string,expirationDate:Date,AuthoriseduserId:string){\n      localStorage.setItem('token',token);\n      localStorage.setItem('AuthoriseduserId',AuthoriseduserId);\n      localStorage.setItem('expirationDate',expirationDate.toISOString());\n   }\n   //Removing hte Authetication Data\n   private clearAuthData(){\n     localStorage.removeItem('token');\n     localStorage.removeItem('AuthoriseduserId')\n     localStorage.removeItem('expirationDate');\n   }\n\n   // Code for Autostart of app i.e refereshing the web application doesn't start the app\n   autoAuthUser(){\n      const localStorageData= this.getLocalAuthData();\n      if(!localStorageData){\n        return;\n      }\n      const currentDae=new Date();\n      const futureDate=localStorageData.expirationDate;\n\n      const expirationDate=futureDate.getTime()-currentDae.getTime();\n\n      if(expirationDate>0){\n          \n          this.token=localStorageData.token;\n          this.AuthoriseduserId=localStorageData.AuthoriseduserId;\n          this.tokentStatus.next(true);\n          this.isUserAunticated=true;\n          this.timer(expirationDate/1000);\n      }\n   }\n   \n   // Getting local storage auth data\n   private getLocalAuthData(){\n      const token=localStorage.getItem('token');\n      const expirationDate=localStorage.getItem('expirationDate');\n      const AuthoriseduserId=localStorage.getItem('AuthoriseduserId');\n      if(!token || !expirationDate){\n        return;\n      }\n      return{\n        'token':token,\n        'expirationDate':new Date(expirationDate),\n        'AuthoriseduserId':AuthoriseduserId\n      }\n   }\n   // Getting Auhtorised Used ID\n   getAuthorisesUserId(){\n     return this.AuthoriseduserId;\n   }\n}\n\n","import { Component, OnInit, OnDestroy} from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { AuthService } from '../auth.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n\r\n@Component({\r\n    templateUrl:'./sign-in.template.html',\r\n    styleUrls:['./sign-in.component.css']\r\n})\r\nexport class SignInComponent implements OnInit,OnDestroy {\r\n    constructor(private userService:AuthService){\r\n\r\n    }\r\n\r\n    // Property for spinning\r\n    spinner:boolean=false;\r\n    spinnersubscription:Subscription;\r\n    ngOnInit(){\r\n        this.spinnersubscription=this.userService.getTokenStatus().subscribe(data=>this.spinner=data)\r\n    }\r\n    ngOnDestroy(){\r\n        this.spinnersubscription.unsubscribe();\r\n    }\r\n    \r\n\r\n\r\n    login(form:NgForm){\r\n        if(form.invalid){\r\n            return;\r\n        }\r\n        this.userService.login(form.value.email,form.value.password);\r\n        form.resetForm();\r\n    }\r\n    \r\n}","module.exports = \"mat-form-field,input{\\r\\n    width: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9zdHMvYXV0aC9zaWduLWluL3NpZ24taW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7QUFDZiIsImZpbGUiOiJzcmMvYXBwL3Bvc3RzL2F1dGgvc2lnbi1pbi9zaWduLWluLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZCxpbnB1dHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59Il19 */\"","module.exports = \"mat-form-field,input{\\r\\n    width: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9zdHMvYXV0aC9zaWduLXVwL3NpZ24tdXAuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7QUFDZiIsImZpbGUiOiJzcmMvYXBwL3Bvc3RzL2F1dGgvc2lnbi11cC9zaWduLXVwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZCxpbnB1dHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { NgForm } from '@angular/forms';\nimport { UserModule } from '../../user.model';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n\n  constructor(private _authservice:AuthService,private router:Router) { }\n  userStatus:boolean=false;\n\n  subscription:Subscription\n  ngOnInit() {\n    this.subscription=this._authservice.getTokenStatus().subscribe(data=>this.userStatus=data);\n  }\n  ngOnDestroy(){\n    this.subscription.unsubscribe();\n  }\n  login(form:NgForm){\n      if(form.invalid){\n        return;\n      }\n    this._authservice.createUser(form.value.email,form.value.password);\n    form.resetForm();\n  }\n}\n\n","module.exports = \"/* mat-card{\\n    width:80%;\\n    margin:auto\\n} */\\nmat-form-field,textarea{\\n    width: 100%;\\n}\\nmat-spinner{\\n    margin: auto;\\n}\\n#imageUpload{\\n    visibility: hidden;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9zdHMvY3JlYXRlLXBvc3RzL3Bvc3QtY3JlYXRlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztHQUdHO0FBQ0g7SUFDSSxXQUFXO0FBQ2Y7QUFDQTtJQUNJLFlBQVk7QUFDaEI7QUFDQTtJQUNJLGtCQUFrQjtBQUN0QiIsImZpbGUiOiJzcmMvYXBwL3Bvc3RzL2NyZWF0ZS1wb3N0cy9wb3N0LWNyZWF0ZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogbWF0LWNhcmR7XG4gICAgd2lkdGg6ODAlO1xuICAgIG1hcmdpbjphdXRvXG59ICovXG5tYXQtZm9ybS1maWVsZCx0ZXh0YXJlYXtcbiAgICB3aWR0aDogMTAwJTtcbn1cbm1hdC1zcGlubmVye1xuICAgIG1hcmdpbjogYXV0bztcbn1cbiNpbWFnZVVwbG9hZHtcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47XG59Il19 */\"","import { Component,EventEmitter, Output } from '@angular/core';\nimport { Post } from '../post.model';\nimport { NgForm } from '@angular/forms';\nimport { PostService } from '../post-service';\nimport { format } from 'util';\nimport { Subscription } from 'rxjs';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-post-create',\n  templateUrl: './posts-create.component.html',\n  styleUrls:['./post-create.component.css']\n})\nexport class PostCreateComponent {\n  constructor(private _postService:PostService,private router:Router,private activateRoute:ActivatedRoute ){\n    \n  }\n  title='';\n  content='';\n  private id:string;\n  private mode:string;\n  post:Post;\n  spinner=false\n  ngOnInit(){\n      this.activateRoute.paramMap.subscribe((paramMap:ParamMap)=>{\n        if(paramMap.has('id')){\n          this.id=paramMap.get('id');\n          this.mode='Edit';\n          this.spinner=true;\n          this._postService.getPost(this.id).subscribe(data=>{\n            this.spinner=false;\n            this.post={content:data.data.content,title:data.data.title,id:data.data._id,creator:null}\n          });\n          // this._postService.getPost(this.id).subscribe((post)=>{\n          //   this.post.title=post.data.title;\n          //   this.post.content=post.data.content;\n          // });\n          // console.log(this.post);\n        }else{\n          this.mode='Create';\n          this.id=null;\n        }\n      })     \n  } \n\n  \n  // Creating Post\n  onSavePosts(form:NgForm){\n    if(form.invalid){\n      return;\n    }\n    this.spinner=true;\n    //Invokes when we are creating the post\n    if(this.mode==='Create'){\n      var post:Post={id:null,title:form.value.title,content:form.value.content,creator:null};\n    this._postService.createPost(post);\n    //Invokes when we updating the post\n    }else{\n      var post:Post={id:this.id,title:form.value.title,content:form.value.content,creator:null};\n      this._postService.updatePost(this.id,post)\n    }\n    \n    form.resetForm();\n    \n  }\n \n \n   \n}\n\n\n","module.exports = \"mat-accordion{\\n    display: block;\\n    margin-top: 2rem;\\n}\\n.elseBock{\\n   text-align: center;\\n}\\nmat-spinner{\\n    margin: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9zdHMvbGlzdC1wb3N0cy9wb3N0LWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGNBQWM7SUFDZCxnQkFBZ0I7QUFDcEI7QUFDQTtHQUNHLGtCQUFrQjtBQUNyQjtBQUNBO0lBQ0ksWUFBWTtBQUNoQiIsImZpbGUiOiJzcmMvYXBwL3Bvc3RzL2xpc3QtcG9zdHMvcG9zdC1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtYWNjb3JkaW9ue1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbi10b3A6IDJyZW07XG59XG4uZWxzZUJvY2t7XG4gICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5tYXQtc3Bpbm5lcntcbiAgICBtYXJnaW46IGF1dG87XG59Il19 */\"","import { Component, Input } from '@angular/core';\nimport { Post } from '../post.model';\nimport { PostService } from '../post-service';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../auth/auth.service';\n\n@Component({\n    selector:'app-post-list',\n    templateUrl:'./post-list.component.html',\n    styleUrls:['./post-list.component.css']\n})\n\nexport class PostListComponent{\n    postsReceived:Post[]=[];\n    constructor(private _postService:PostService,private _auth:AuthService){\n            \n    }\n    // Authorised User\n    authorisedUser:string;\n\n    subsciption:Subscription;\n    userStatusSubsciption:Subscription;\n\n    // User authentication Variable \n    userAuth:boolean=false;\n    ngOnInit(){\n        this.authorisedUser= this._auth.getAuthorisesUserId();\n        \n        this._postService.getData();\n        this.subsciption=this._postService.customEvent.subscribe(data=>{this.postsReceived=data\n        });\n\n         this._postService.getData();\n         // Getting the status of user whether is authenticated or not \n         this.userStatusSubsciption=this._auth.getTokenStatus().subscribe((userAuthenticated)=>{\n             this.userAuth=userAuthenticated;\n             this.authorisedUser=this._auth.getAuthorisesUserId()\n         });\n         this.userAuth=this._auth.getUserStatus();\n    }\n\n    onDelete(id){\n        this._postService.deletePost(id);\n    }\n    ngOnDestroy(){\n        this.subsciption.unsubscribe();\n        this.userStatusSubsciption.unsubscribe();\n    }\n}","import { Injectable, EventEmitter } from '@angular/core';\nimport { Post } from './post.model';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { pipe } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n\n@Injectable()\nexport class PostService {\n\n    post: Post[] = [];\n\n    constructor(private _http: HttpClient,private router:Router) {\n\n    }\n    // Getting the Data \n    getData() {\n        this._http.get<{ message: string, data: any }>(`http://localhost:4200/api/post`)\n            .pipe(map((postData) => {\n                return postData.data.map((postElement) => {\n                    \n                    return {\n                        id: postElement._id,\n                        content: postElement.content,\n                        title: postElement.title,\n                        creator:postElement.creator\n                    }\n                })\n            }))\n            .subscribe((dataM) => {\n                this.customEvent.emit(dataM);\n            }\n            )\n    };\n\n\n    // Custom even which emits the post on create\n    customEvent = new EventEmitter<Post[]>();\n    customEventSingle = new EventEmitter<Post>();\n\n    createPost(post: Post) {\n        this._http.post<{ id: string, title: string, content: string }>(`http://localhost:4200/api/post`,\n            { _id: post.id, title: post.title, content: post.content },\n            {\n                headers: new HttpHeaders({\n                    'Content-Type': 'application/json'\n                })\n            })\n            .subscribe((data) => {\n                this.getData();\n                this.router.navigate(['/']);\n            })\n\n    }\n\n    //Deleting Post\n    deletePost(id) {\n        this._http.delete(`http://localhost:4200/api/post/${id}`)\n            .subscribe(() => this.getData())\n    }\n\n\n    //getting the post by id for editing\n     getPost(id){\n       return this._http.get<{ message: string, data: any }>(`http://localhost:4200/api/post/${id}`);\n       \n    }\n    //Updating the post \n    updatePost(id:string,post:Post){\n        this._http.patch(`http://localhost:4200/api/post/${id}`,\n        { _id: post.id, title: post.title, content: post.content,creator:post.creator },\n            {\n                headers: new HttpHeaders({\n                    'Content-Type': 'application/json'\n                })\n            }).subscribe(()=>{\n                this.router.navigate(['/']);\n            });  \n        }\n\n\n}\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}